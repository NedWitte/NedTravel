---
title: "A testing script for map visualization"
description: "test with Andrew Heiss tutorial"
author: "JNW"
date: "2023"
---

**testing**

```{r}
#| echo: false
#| output: false
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(sf)

world_map <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/ne_110m_admin_0_countries/ne_110m_admin_0_countries.shp")


#Download cb_2018_us_state_20m.zip under "States" from
# https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html
us_states <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/cb_2018_us_state_20m/cb_2018_us_state_20m.shp")

# Download cb_2018_us_county_5m.zip under "County" from
# https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html
us_counties <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/cb_2018_us_county_5m/cb_2018_us_county_5m.shp")

# Download "Admin 1 â€“ States, Provinces" from
# https://www.naturalearthdata.com/downloads/10m-cultural-vectors/
us_states_hires <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/ne_10m_admin_1_states_provinces/ne_10m_admin_1_states_provinces.shp")

# Download "Rivers + lake centerlines" from
# https://www.naturalearthdata.com/downloads/10m-physical-vectors/
rivers_global <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/ne_10m_rivers_lake_centerlines/ne_10m_rivers_lake_centerlines.shp")

# Download "Rivers + lake centerlines, North America supplement" from
# https://www.naturalearthdata.com/downloads/10m-physical-vectors/
rivers_na <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/ne_10m_rivers_north_america/ne_10m_rivers_north_america.shp")

# Download "Lakes + Reservoirs" from
# https://www.naturalearthdata.com/downloads/10m-physical-vectors/
lakes <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/ne_10m_lakes/ne_10m_lakes.shp")

# Download from https://data.georgiaspatial.org/index.asp?body=preview&dataId=41516
# after creating an account and logging in
ga_schools <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/shapefiles/schools_2009/DOE Schools 2009.shp")


DEU1 <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/DEU_SHP/DEU_adm0.shp")

DEU2 <- read_sf("C:/Users/WITTEJ09/OneDrive - Pfizer/Documents/Quarto/KarambolageInvesting/NedTravel/data/shapefiles/DEU_SHP/DEU_adm1.shp")


```

```{r}
#| echo: false
#| output: false
#| include: false

lower_48 <- us_states %>%
  filter(!(NAME %in% c("Alaska", "Hawaii", "Puerto Rico")))

```

```{r}
#| echo: false
ggplot()+
  geom_sf(data = lower_48)+
   coord_sf(crs = st_crs("ESRI:102003"))

```

```{r}
#| echo: false
#| output: false
#| include: false

only_georgia <- us_states %>% 
  filter(NAME == "Georgia")

ga_counties <- us_counties %>%
  filter(STATEFP == 13)
 
ga_schools_fixed <- ga_schools %>%
  filter(ID != 22097)

ga_cities <- tribble(
  ~city, ~lat, ~long,
  "Atlanta", 33.748, -84.388
) %>% 
  st_as_sf(coords = c("long", "lat"), crs= 4326)

```

```{r}
#| echo: false
#| warning: false
#| message: false

 ggplot()+
  geom_sf(data = only_georgia)+
  geom_sf(data = ga_counties)+
  geom_sf(data = ga_schools_fixed, size = 0.5, alpha= 0.5,
          aes(color= TOTAL))+
  geom_sf(data =ga_cities, size= 2, color= "yellow")+
  geom_sf_label(data =ga_cities, aes(label= city), nudge_y = 0.2)
  scale_color_continuous()
  theme_void()
 
```

```{r}
#| echo: false
#| output: false
#| include: false

#install.packages("WDI")
library(WDI)

indicators <- c("SP.DYN.LE00.IN")
 
wdi_raw <- WDI::WDI(country = "all", indicators, extra = TRUE,
                    start = 2020, end= 2020)

wdi_raw <- wdi_raw %>% select(life_expectancy = SP.DYN.LE00.IN, iso3c)

world_map <- world_map %>% 
  filter(ISO_A3 != "ATA")

world_map <- world_map %>% 
              left_join(wdi_raw, by = c("ISO_A3" = "iso3c"))


  
```

```{r}
ggplot() + 
  geom_sf(data = world_map, 
          aes(fill = life_expectancy),
          size = 0.25) +
  coord_sf(crs = st_crs("ESRI:54030")) +  # Robinson
  scale_fill_gradient(low = "grey100", high = "grey10") +
  labs(fill = "Life expectancy") +
  theme_void() +
  theme(legend.position = "bottom")
```

```{r}
#| echo: false


```
